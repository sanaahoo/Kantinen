@page "/login"
@inject ILoginServices LoginServices
@inject NavigationManager NavigationManager
@inject ILoginServices LoginService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager Navigation



<!-- Overskrift til login-siden -->
<h3 class="text-center my-4">Login</h3>

<!-- Container til login-formularen -->
<div class="container d-flex justify-content-center">
    <div class="card shadow-sm p-4" style="max-width: 400px; width: 100%;">
        <!-- Formular til login -->
        <form @onsubmit="HandleLogin">
            <!-- Inputfelt til brugernavn -->
            <div class="mb-3">
                <label for="username" class="form-label">Username:</label>
                <input type="text" id="username" class="form-control" @bind="Username" />
            </div>

            <!-- Inputfelt til adgangskode -->
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <input type="password" id="password" class="form-control" @bind="Password" />
            </div>

            <!-- Knap til at indsende login-formularen -->
            <button type="submit" class="btn btn-primary w-100">Login</button>

            <!-- Besked til brugeren (success eller fejl) -->
            <p class="mt-3 text-center @((Message == "Login successful!") ? "text-success" : "text-danger")">@Message</p>
        </form>
    </div>
</div>

<!-- C#-kodeblok -->
@code {
    // Brugernavn, der indtastes af brugeren
    private string Username { get; set; } = string.Empty;

    // Adgangskode, der indtastes af brugeren
    private string Password { get; set; } = string.Empty;

    // Besked til brugeren (fx "Login successful!" eller "Invalid username or password.")
    private string Message { get; set; } = string.Empty;

    // Metode til at h√•ndtere login
    private async Task HandleLogin()
    {
        // Kalder login-service til at verificere brugernavn og adgangskode
        var token = await LoginService.VerifyLogin(Username, Password);

        // Tjekker om login er succesfuldt (token er ikke tom)
        if (!string.IsNullOrEmpty(token))
        {
            // Gemmer JWT-token i local storage
            await LocalStorage.SetItemAsync("jwt", token);

            // Omdirigerer brugeren til startsiden eller en sikker side
            Navigation.NavigateTo("/", true);
        }
        else
        {
            // Viser en fejlbesked, hvis login fejler
            Message = "Invalid username or password.";
        }
    }
}
