@page "/event" 
@inject IEventServices EventServices 
@using Core.Model 

<!-- Overskrift til event management -->
<h3 class="text-center my-4">Event Management</h3>

<!-- Container til formularen -->
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <!-- EditForm til at tilføje en ny begivenhed -->
            <EditForm Model="NewEvent" OnValidSubmit="HandleEventSubmit" class="p-4 border rounded shadow-sm bg-light">
                <fieldset>
                    <!-- Formularoverskrift -->
                    <legend class="mb-3 text-primary custom-legend">Add a New Event</legend>

                    <!-- Inputfelt for begivenhedens navn -->
                    <div class="mb-3">
                        <label for="name" class="form-label">Name:</label>
                        <InputText id="name" class="form-control" @bind-Value="NewEvent.Name" required />
                    </div>

                    <!-- Inputfelt for begivenhedens dato -->
                    <div class="mb-3">
                        <label for="dato" class="form-label">Date:</label>
                        <InputDate id="dato" class="form-control" @bind-Value="NewEvent.Dato" required />
                    </div>

                    <!-- Inputfelt for begivenhedens lokation -->
                    <div class="mb-3">
                        <label for="lokation" class="form-label">Location:</label>
                        <InputText id="lokation" class="form-control" @bind-Value="NewEvent.Lokation" required />
                    </div>

                    <!-- Inputfelt for antal deltagere -->
                    <div class="mb-3">
                        <label for="deltagerAntal" class="form-label">Participants:</label>
                        <InputNumber id="deltagerAntal" class="form-control" @bind-Value="NewEvent.DeltagerAntal" required />
                    </div>

                    <!-- Inputfelt for madvalg -->
                    <div class="mb-3">
                        <label for="madValg" class="form-label">Food Choice:</label>
                        <InputText id="madValg" class="form-control" @bind-Value="NewEvent.MadValg" />
                    </div>

                    <!-- Inputfelt for særlige ønsker -->
                    <div class="mb-3">
                        <label for="saerligeOensker" class="form-label">Special Requests:</label>
                        <InputText id="saerligeOensker" class="form-control" @bind-Value="NewEvent.SærligeØnsker" />
                    </div>

                    <!-- Inputfelt for kunde -->
                    <div class="mb-3">
                        <label for="kunde" class="form-label">Customer:</label>
                        <InputText id="kunde" class="form-control" @bind-Value="@NewEvent.Kunde" />
                    </div>

                    <!-- Knap til at tilføje begivenheden -->
                    <button type="submit" class="btn btn-primary w-100">Add Event</button>
                </fieldset>
            </EditForm>
        </div>
    </div>
</div>

<!-- Horizontal linje til adskillelse -->
<hr />

<!-- Overskrift til begivenhedslisten -->
<h4>Event List</h4>

<!-- Tjekker om der er begivenheder i listen -->
@if (EventList.Any())
{
    <!-- Tabel til at vise begivenheder -->
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Date</th>
                <th>Location</th>
                <th>Participants</th>
                <th>Food Choice</th>
                <th>Special Requests</th>
                <th>Customer</th>
            </tr>
        </thead>
        <tbody>
            <!-- Loop gennem hver begivenhed i listen -->
            @foreach (var evt in EventList)
            {
                <tr>
                    <td>@evt.Name</td>
                    <td>@evt.Dato.ToShortDateString()</td>
                    <td>@evt.Lokation</td>
                    <td>@evt.DeltagerAntal</td>
                    <td>@evt.MadValg</td>
                    <td>@evt.SærligeØnsker</td>
                    <td>@evt.Kunde</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <!-- Besked, hvis der ikke er nogen begivenheder -->
    <p>No events available.</p>
}

<!-- C#-kodeblok -->
@code
{
    // Ny begivenhed, der skal tilføjes
    private Event NewEvent { get; set; } = new Event();

    // Liste over eksisterende begivenheder
    private List<Event> EventList { get; set; } = new List<Event>();

    // Metode til at håndtere indsendelse af en ny begivenhed
    private async Task HandleEventSubmit()
    {
        // Tilføjer den nye begivenhed gennem EventServices
        await EventServices.CreateAsync(NewEvent);

        // Opdaterer begivenhedslisten ved at hente alle begivenheder igen
        EventList = (await EventServices.GetAllAsync()).ToList();

        // Nulstiller formularen ved at oprette en ny Event-instans
        NewEvent = new Event();
    }

    // Metode, der køres, når komponenten initialiseres
    protected override async Task OnInitializedAsync()
    {
        // Indlæser alle eksisterende begivenheder fra EventServices
        EventList = (await EventServices.GetAllAsync()).ToList();
    }
}