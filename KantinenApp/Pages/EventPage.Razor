@page "/event"
@inject IEventServices EventServices
@using Core.Model


<link href="css/event.css" rel="stylesheet" />

<h3>Event Management</h3>
<div class="event-container">
    <form @onsubmit="HandleEventSubmit">
        <fieldset>
            <legend>Add a New Event</legend>

            <div>
                <label for="name">Name:</label>
                <input type="text" id="name" @bindvalue="NewEvent.Name" required />
            </div>

            <div>
                <label for="dato">Date:</label>
                <input type="date" id="dato" @bindvalue="NewEvent.Dato" required />
            </div>

            <div>
                <label for="lokation">Location:</label>
                <input type="text" id="lokation" @bindvalue="NewEvent.Lokation" required />
            </div>

            <div>
                <label for="deltagerAntal">Participants:</label>
                <input type="number" id="deltagerAntal" @bindvalue="NewEvent.DeltagerAntal" required />
            </div>

            <div>
                <label for="madValg">Food Choice:</label>
                <input type="text" id="madValg" @bindvalue="NewEvent.MadValg" />
            </div>

            <div>
                <label for="saerligeOensker">Special Requests:</label>
                <input type="text" id="saerligeOensker" @bindvalue="NewEvent.SærligeØnsker" />
            </div>

            <div>
                <label for="kunde">Customer:</label>
                <input type="text" id="kunde" @bindvalue="NewEvent.Kunde" />
            </div>

            <button type="submit">Add Event</button>
        </fieldset>
    </form>

    <hr />

    <h4>Event List</h4>
    @if (EventList.Any())
    {
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Date</th>
                    <th>Location</th>
                    <th>Participants</th>
                    <th>Food Choice</th>
                    <th>Special Requests</th>
                    <th>Customer</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var evt in EventList)
                {
                    <tr>
                        <td>@evt.Name</td>
                        <td>@evt.Dato.ToShortDateString()</td>
                        <td>@evt.Lokation</td>
                        <td>@evt.DeltagerAntal</td>
                        <td>@evt.MadValg</td>
                        <td>@evt.SærligeØnsker</td>
                        <td>@evt.Kunde</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No events available.</p>
    }
</div>

@code

{
    private Event NewEvent { get; set; } = new Event();
    private List<Event> EventList { get; set; } = new List<Event>();

    private async Task HandleEventSubmit()
    {
        // Add new event through service
        await EventServices.CreateAsync(NewEvent);

        // Refresh the event list
        EventList = (await EventServices.GetAllAsync());

        // Reset the form
        NewEvent = new Event();
    }

    protected override async Task OnInitializedAsync()
    {
        // Load existing events from the service
        EventList = (await EventServices.GetAllAsync()).ToList();
    }
}
